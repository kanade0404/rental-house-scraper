// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: open_room_event.sql

package domains

import (
	"context"
	"time"
)

const createOpenRoomEvent = `-- name: CreateOpenRoomEvent :one
INSERT INTO open_room_event (room_id, recorded_at)
SELECT $1, $2
WHERE NOT EXISTS (
    SELECT room_id
    FROM open_room_event
    WHERE room_id = $1 AND recorded_at = $2
)
    RETURNING room_id, recorded_at
`

type CreateOpenRoomEventParams struct {
	RoomID     int32
	RecordedAt time.Time
}

type CreateOpenRoomEventRow struct {
	RoomID     int32
	RecordedAt time.Time
}

func (q *Queries) CreateOpenRoomEvent(ctx context.Context, arg CreateOpenRoomEventParams) (CreateOpenRoomEventRow, error) {
	row := q.db.QueryRowContext(ctx, createOpenRoomEvent, arg.RoomID, arg.RecordedAt)
	var i CreateOpenRoomEventRow
	err := row.Scan(&i.RoomID, &i.RecordedAt)
	return i, err
}
