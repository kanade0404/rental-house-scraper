// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: story.sql

package domains

import (
	"context"
)

const createBasementStory = `-- name: CreateBasementStory :one
INSERT INTO basement_story (house_id, num)
SELECT $1, $2
FROM basement_story
WHERE house_id = $1 AND num = $2
    RETURNING house_id, num
`

type CreateBasementStoryParams struct {
	HouseID int32
	Num     int32
}

func (q *Queries) CreateBasementStory(ctx context.Context, arg CreateBasementStoryParams) (BasementStory, error) {
	row := q.db.QueryRowContext(ctx, createBasementStory, arg.HouseID, arg.Num)
	var i BasementStory
	err := row.Scan(&i.HouseID, &i.Num)
	return i, err
}

const createStory = `-- name: CreateStory :one
INSERT INTO story (house_id, num)
SELECT $1, $2
FROM story
WHERE house_id = $1 AND num = $2
    RETURNING house_id, num
`

type CreateStoryParams struct {
	HouseID int32
	Num     int32
}

func (q *Queries) CreateStory(ctx context.Context, arg CreateStoryParams) (Story, error) {
	row := q.db.QueryRowContext(ctx, createStory, arg.HouseID, arg.Num)
	var i Story
	err := row.Scan(&i.HouseID, &i.Num)
	return i, err
}
