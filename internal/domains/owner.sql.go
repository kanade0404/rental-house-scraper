// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: owner.sql

package domains

import (
	"context"
)

const createOwner = `-- name: CreateOwner :one
INSERT INTO owner (name, tel, address_id)
SELECT $1, $2, $3
WHERE NOT EXISTS (
    SELECT name, tel, address_id
    FROM owner
    WHERE name = $1 AND tel = $2 AND address_id = $3
)
    RETURNING name, tel, address_id
`

type CreateOwnerParams struct {
	Name      string
	Tel       string
	AddressID int32
}

type CreateOwnerRow struct {
	Name      string
	Tel       string
	AddressID int32
}

func (q *Queries) CreateOwner(ctx context.Context, arg CreateOwnerParams) (CreateOwnerRow, error) {
	row := q.db.QueryRowContext(ctx, createOwner, arg.Name, arg.Tel, arg.AddressID)
	var i CreateOwnerRow
	err := row.Scan(&i.Name, &i.Tel, &i.AddressID)
	return i, err
}
