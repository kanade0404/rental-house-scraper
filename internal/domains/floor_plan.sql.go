// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: floor_plan.sql

package domains

import (
	"context"
)

const createFloorPlan = `-- name: CreateFloorPlan :one
INSERT INTO floor_plan (name, floor_plan_type)
SELECT $1, $2
WHERE NOT EXISTS (
    SELECT name, floor_plan_type
    FROM floor_plan
    WHERE name = $1 AND floor_plan_type = $2
)
    RETURNING name, floor_plan_type
`

type CreateFloorPlanParams struct {
	Name          string
	FloorPlanType string
}

func (q *Queries) CreateFloorPlan(ctx context.Context, arg CreateFloorPlanParams) (FloorPlan, error) {
	row := q.db.QueryRowContext(ctx, createFloorPlan, arg.Name, arg.FloorPlanType)
	var i FloorPlan
	err := row.Scan(&i.Name, &i.FloorPlanType)
	return i, err
}
