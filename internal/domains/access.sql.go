// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: access.sql

package domains

import (
	"context"
)

const createAccess = `-- name: CreateAccess :one
INSERT INTO access (station, movement_method, time_in_minutes, house_id)
SELECT $1, $2, $3, $4
WHERE NOT EXISTS (
    SELECT 1
    FROM access
    WHERE station = $1 AND movement_method = $2 AND time_in_minutes = $3 AND house_id = $4
)
RETURNING station, movement_method, time_in_minutes, house_id
`

type CreateAccessParams struct {
	Station        string
	MovementMethod string
	TimeInMinutes  int32
	HouseID        int32
}

func (q *Queries) CreateAccess(ctx context.Context, arg CreateAccessParams) (Access, error) {
	row := q.db.QueryRowContext(ctx, createAccess,
		arg.Station,
		arg.MovementMethod,
		arg.TimeInMinutes,
		arg.HouseID,
	)
	var i Access
	err := row.Scan(
		&i.Station,
		&i.MovementMethod,
		&i.TimeInMinutes,
		&i.HouseID,
	)
	return i, err
}
